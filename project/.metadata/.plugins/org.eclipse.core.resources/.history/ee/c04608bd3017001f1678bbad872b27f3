package com.cg.onlinesweetmart.security;

import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.cg.onlinesweetmart.entity.User;
import com.cg.onlinesweetmart.repository.UserRepository;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class CustomUserDetailService implements UserDetailsService{

	private UserRepository userRepository;
	
	@Override
	public UserDetails loadUserByUsername(String UsernameOrEmail) throws UsernameNotFoundException{
		
		User user = userRepository.findByUsernameOrEmail(UsernameOrEmail, UsernameOrEmail)
				.orElseThrow(() -> new UsernameNotFoundException("username or email doesn't exist"));
		
		Set<GrantedAuthority> authorities = user.getRoles().stream()
				.map((role) -> new SimpleGrantedAuthority(role.getName()))
				.collect(Collectors.toSet());
	}
	
}
